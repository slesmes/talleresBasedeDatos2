create table Clientes(
	identificacion varchar primary key,
	nombre varchar not null,
	edad integer not null,
	correo varchar
);

create table productos(
	codigo varchar primary key,
	nombre varchar not null,
	stock integer not null,
	valor_unitario float not null
);

create table facturas (
	id varchar primary key,
	fecha date not null,
	cantidad integer not null,  
	valor_total integer not null,
	producto_id varchar, 
	cliente_id  varchar,
	pedido_estado varchar check (pedido_estado in ('pendiente', 'bloqueado', 'entregado')),
	
	foreign key (producto_id) references productos(codigo),
	foreign key (cliente_id) references Clientes(identificacion)
)

create table auditoria(
	id serial primary key,
	fecha_inicio date not null,
	fecha_final date not null,
	factura_id varchar,
	pedido_estado varchar check (pedido_estado in ('pendiente', 'bloqueado', 'entregado')),
	
	foreign key (factura_id) references facturas(id)
)

create or replace procedure generar_auditoria(p_fecha_inicio date, p_fecha_final date)
language plpgsql
as $$
declare
	v_fecha date;
	v_id varchar;
	v_pedido_estado varchar;
begin
		for v_fecha, v_id, v_pedido_estado in select fecha, id, pedido_estado from facturas
		loop
			if v_fecha between p_fecha_inicio and p_fecha_final then
				raise notice 'agregando la factura: % , en la tabla auidtoria', v_fecha;
				insert into auditoria(fecha_inicio, fecha_final, factura_id, pedido_estado) values (p_fecha_inicio, p_fecha_final, v_id, v_pedido_estado);  
			end if;
		end loop;
end;
$$;

insert into Clientes (identificacion , nombre, edad, correo) values
('1', 'juan perez', 30, 'juan.perez@example.com'),
('2', 'mar√≠a garcia', 25, 'maria.garcia@example.com'),
('3', 'carlos sanchez', 40, 'carlos.sanchez@example.com');


insert into productos (codigo, nombre, stock, valor_unitario) values
('1', 'pc', 50, 799.99),
('2', 'celular', 150, 399.99),
('3', 'tablet', 100, 299.99);


insert into facturas (id, fecha, cantidad, valor_total, producto_id, cliente_id, pedido_estado) values
('1', '2024-08-01', 2, 1599.98, '1', '1', 'pendiente'),
('2', '2024-08-02', 1, 399.99, '2', '2', 'pendiente'),
('3', '2024-08-03', 3, 899.97, '3', '3', 'pendiente');

call generar_auditoria('2024-08-02','2024-08-03')


CREATE SEQUENCE facturas_id_seq
    START WITH 4
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;



create or replace procedure simular_ventas_mes()
language plpgsql
as $$
declare 
	v_dia integer := 1;
	v_identificacion varchar;
	v_cantidad integer;
	v_valor_total numeric;
 	v_producto_id varchar;
 	v_id_factura integer;
 	v_fecha date;
	
begin
	while v_dia <= 30 loop
		for v_identificacion in (select identificacion from Clientes) loop
			v_cantidad := FLOOR(RANDOM() * 10) + 1;
			v_valor_total := v_cantidad * (FLOOR(RANDOM() * 399) + 1);
		 	v_producto_id := FLOOR(RANDOM() * 3) + 1;
		 	v_id_factura := nextval('facturas_id_seq');
		 	v_fecha := CURRENT_DATE - INTERVAL '1 month' + INTERVAL '1 day' * v_dia;
			insert into facturas (id, fecha, cantidad, valor_total, producto_id, cliente_id, pedido_estado) 
			values (v_id_factura, v_fecha, v_cantidad, v_valor_total, v_producto_id, v_identificacion, 'pendiente');
		end loop;
		v_dia := v_dia + 1;
	end loop;
end;
$$;

call simular_ventas_mes();
select * from facturas;
